cmake_minimum_required (VERSION 2.8)
project( Main )

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)


if(WIN32)
	set(TARGET_OS windows)
	# set(LIB_PREFIX )
	if(CMAKE_SIZEOF_VOID_P MATCHES "4") 
		set(ARCH_BITS 32)
	elseif(CMAKE_SIZEOF_VOID_P MATCHES "8")
		set(ARCH_BITS 64)
	endif()
	set(STATIC_LIB_SUFFIX  .lib)
	set(DYANMIC_LIB_SUFFIX .dll) 
elseif(ANDROID)
	set(TARGET_OS android)
	set(LIB_PREFIX lib)
	set(STATIC_LIB_SUFFIX  .a)
	set(DYANMIC_LIB_SUFFIX .so) 
elseif(APPLE)
	set(TARGET_OS darwin)
	set(LIB_PREFIX lib)
	set(STATIC_LIB_SUFFIX  .a)
	set(DYANMIC_LIB_SUFFIX .dylib) 
add_definitions(-g)
else()
	set(TARGET_OS linux)
	set(LIB_PREFIX lib)
	set(STATIC_LIB_SUFFIX  .a)
	set(DYANMIC_LIB_SUFFIX .so) 
	add_definitions(-g)
endif()



if(APPLE)
	# On Mac systems, we need to explicitly enable C++11 extensions and runtime
	#set(CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++")
	set(CMAKE_CXX_FLAGS "-std=c++0x" )
elseif(WIN32)
else()
	#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x" )
	set(CMAKE_CXX_FLAGS "-std=c++0x" )
endif()

add_subdirectory( Main )
add_subdirectory( External )
